const express = require("express");
const router = express.Router();
const fs = require("fs");
const readline = require("readline");

const db = require("./oracleDbWrapper");

//temporary route - create table
router.get("/createTable", async (req, res, next) => {
  // Id NUMBER GENERATED BY DEFAULT as IDENTITY(START with 1 INCREMENT by 1),
  const query = `CREATE TABLE Emp (
    Id NUMBER PRIMARY KEY NOT NULL,
    FirstName VARCHAR(20),
    LastName VARCHAR(20),
    Designation VARCHAR(20),
    Salary NUMBER,
    Ratings FLOAT,
    DOB VARCHAR(30)
  )`;

  const result = await db.createTable(query);
  console.log(result);
  res.json({ result });
});

// Return ?
router.get("/insertOne", async (req, res, next) => {
  const readableStream = fs.createReadStream("./data.txt", "utf-8");
  readableStream.on("error", (err) => console.log(err));

  const rl = readline.createInterface({
    input: readableStream,
    crlfDelay: Infinity,
    terminal: false,
  });

  // const binds = [];
  const dataArray = [];
  let count = 0;
  let headers = [];
  let result = null;
  rl.on("line", async (line) => {
    if (count === 0) {
      headers = line.split("~");
      ++count;
    } else {
      const splittedLine = line.split("~");
      console.log({ splittedLine });

      // const dataObj = {};
      // for (let i = 0; i < headers.length; i++) {
      //   const header = headers[i];
      //   dataObj[header] = splittedLine[i];
      // }
      // ++count;

      // console.log(dataObj);
      result = await db.insertOne("Emp", splittedLine);
      // dataArray.push(dataObj);
    }
    // console.log(dataArray);
    console.log({ result });
    // res.json(result);
  });
});

router.get("/insertMany", async (req, res, next) => {
  const arrayOfData = [
    [6, "Bill", "Stone", "CEO", 1000, 5, "10-10-1950"],
    [7, "Will", "Smith", "Actor", 500, 4, "13-05-1987"],
  ];
  // const arrayOfDataObjs = [
  //   {
  //     Id: "4",
  //     FirstName: "Bill",
  //     LastName: "Stone",
  //     Designation: "CEO",
  //     Salary: "1000",
  //     Ratings: "5",
  //     DOB: "10-10-1950",
  //   },
  //   {
  //     Id: "5",
  //     FirstName: "Will",
  //     LastName: "Smith",
  //     Designation: "Actor",
  //     Salary: "500",
  //     Ratings: "4",
  //     DOB: "13-05-1987",
  //   },
  // ];

  const result = await db.insertMany("Emp", arrayOfData);
  console.log({ result });
  res.json(result);
});

router.get("/findById", async (req, res, next) => {
  const result = await db.findById("Emp", 6);
  console.log(result.rows);
  res.json(result.rows);
});

router.get("/findByIdAndUpdate", async (req, res, next) => {
  // ! ORA-00936: missing expression --> FOR NOT HAVING single quotes around the varchar values
  const firstName = "'Someone'",
    LASTNAME = "'else'",
    SAlarY = 700;

  // * keys should correspond to column names in the table
  // * Column names are NOT case-sensitive
  const result = await db.findByIdAndUpdate("Emp", 7, { SAlarY });
  console.log(result);
  res.json(result);
});

router.get("/findByIdAndDelete", async (req, res, next) => {
  const result = await db.findByIdAndDelete("Emp", 6);
  console.log(result);
  res.json(result);
});

router.get("/findOne", async (req, res, next) => {
  const result = await db.findOne("Emp", {
    firstname: "'Will'",
    lastname: "'Smith'",
  });
  console.log(result.rows);
  res.json(result.rows);
});

router.get("/find", async (req, res, next) => {
  const result = await db.find("Emp", {
    id: { $in: [2, 5] },
    ratings: { $gte: 3.5 },
  });
  // console.log(result);
  res.json(result.rows);
});

router.get("/update", async (req, res, next) => {
  const result = await db.update(
    "Emp",
    { firstName: "'William'" },
    { firstName: "'Will'", salary: { $gte: 600 } }
  );
  console.log(result);
  res.json(result);
});

router.get("/delete", async (req, res, next) => {
  const result = await db.delete("Emp", {
    id: { $in: [2, 5] },
    ratings: { $gte: 3.5 },
  });
  console.log(result);
  res.json(result);
});

router.get("/findStream", async (req, res, next) => {
  const result = await db.findStream("Emp", {
    id: { $gte: 3 },
  });
  // console.log(result);
  res.json(result);
});

module.exports = router;
